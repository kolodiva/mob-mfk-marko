

class {

  onInput (input) {
    this.state = {
      width: input.width || '80%',
      height: input.height || '85%',
      visible: input.visible === true
    };
  }

  onMount () {
    this.fixPageScrolling();
  }

  onUpdate () {
    this.fixPageScrolling();
  }

  fixPageScrolling () {
    if (this.state.visible === true) {
      document.body.style.overflow = 'hidden';
    } else {
      document.body.style.overflow = '';
    }
  }

  hide () {
    this.setVisibility(false);
  }

  show () {
    this.setVisibility(true);
  }

  setVisibility (visible) {
    if (this.state.visible === visible) {
      // Visibility did not change... nothing to do
      return;
    }

    if (visible) {
      this.emit('show');
    } else {
      this.emit('hide');
    }

    this.setState('visible', visible);
  }

  handleMaskClick () {
    this.hide();
  }

  handleCancelButtonClick () {
    this.emit('cancel', {});
    this.hide();
  }

  handleDoneButtonClick () {
    var preventDefault = false;

    this.emit('ok', {
      preventDefault () {
        preventDefault = true;
      }
    });

    if (!preventDefault) {
      this.hide();
    }
  }

}

style {
  .app-overlay div {
    font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, sans-serif;
    color: #333333;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
  }

  .app-overlay > .app-overlay-mask {
    position: fixed;
    top: 0px;
    left: 0px;
    right: 0px;
    bottom: 0px;
    visibility: hidden;
    background-color: #000;
    opacity: 0;
    transition-property: opacity, visibility;
    transition-duration: .3s;
    transition-timing-function: ease-out;
  }

  .app-overlay.visible > .app-overlay-mask {
    visibility: visible;
    opacity: 0.8;
    z-index: 999;
  }

  .app-overlay > .app-overlay-container {
    position: fixed;
    top: -50%;
    transform: translateX(-50%) translateY(-50%);
    left: 50%;
    background-color: white;
    opacity: 0;
    transition-property: opacity, top;
    transition-duration: .2s;
    transition-timing-function: ease-out;
    border-radius: 5px;
    overflow: auto;
    z-index: 1000;
  }

  .app-overlay.visible > .app-overlay-container {
    top: 50%;
    opacity: 1;
  }

  .app-overlay-body {
    padding: 1em;
  }

  .app-overlay-footer {
    width: 100%;
    bottom: 0px;
    left: 0px;
    text-align: right;
    padding: 1em;
    padding-top: 2em;
    font-size: 2.5rem;
  }

  .app-overlay > .app-overlay-container .app-overlay > .app-overlay-container {
    height: 100%;
  }

  .app-overlay > .app-overlay-container .app-overlay > .app-overlay-container .app-overlay-footer {
    position: absolute;
    height: 48px;
    left: 0px;
    bottom: 0px;
    width: 100%;
    padding-top: 0px;
  }

}


<div class=["app-overlay", state.visible && "visible"]>
  <div class="app-overlay-mask" onClick("handleMaskClick")/>

  <div
    class="app-overlay-container"
    style={ width: state.width, height: state.height }>
    <div class="app-overlay-body" key="body">
      <${input}/>
    </div>
    <div class="app-overlay-footer" style='position: fixed;'>
      <app-button
        label="Закрыть"
        size="large"
        variant="primary"
        onClick("handleDoneButtonClick")/>
      <!-- &nbsp;
      <app-button
        label="Done"
        size="large"
        variant="primary"
        onClick("handleDoneButtonClick")/> -->
    </div>
  </div>
</div>

<!-- ////////////////////////////////////////////////// -->
