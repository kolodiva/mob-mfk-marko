import storeNomenklator from '../../redux/nomenklator/store'
import * as glob        from '../../jslib/constants'
import axiosProc        from '../../axios'

class {
    onCreate(input, out) {
        // this.state = {
        //     qtyEl: 60
        // };
    }

    onInput(input, out) {}

    onMount() {

        storeNomenklator.subscribe(() => {
            this.forceUpdate();
        });

        const guidParent = this.input.guidParent || '';

        storeNomenklator.dispatch(axiosProc.getNumenklator(guidParent, ''));

        //
        this.winSize = glob.getWinSize();
        //const currEl = jQuery('#44444');
        // const currEl = jQuery(this.getEl('44444')).height('250px');
        // console.log( 'currEl ', currEl );

    }

    onUpdate() {

      const heightHeader = jQuery(this.getEl('catalogHeader')).height();

      jQuery(this.getEl('catalogHeader2')).height( heightHeader + 10 + 'px' );

    }

    openModal() {
      alert('hi');
    }

}

style {
}

//$ console.log( input );
$ const attrs = storeNomenklator.getState();
$ const rec0 = attrs.recs && attrs.recs.length>0 && attrs.recs[0] || false;
$ const headerText = rec0 && rec0.level_group>1||rec0.level_group==0 ? rec0.nameparent0 : 'Go home...';

$ const whGroup       = component&&component.winSize&&component.winSize.width/2-150 + 'px'||'150px';
static const whGood   = '250px';

//$ { () => {console.log( try {component.winWidth/2-50} catch(e) {'350px'}}  )}

//${ console.log( component&&component.winWidth/2-50||'nothing' ) };

<!-- ////////////////////////////////////////////////// -->
<headerName name=`${ headerText }`
    path=`${ rec0 && rec0.level_group>1||rec0.level_group==0 ? rec0.pathparent0 : '/' }` />

<div class=`d-flex ${ rec0.itgroup ? 'flex-row justify-content-around align-items-start flex-wrap p-5' : 'flex-column py-5' } ` style=''>

    <if(rec0)>
        <for|value| of=attrs.recs>
          <if(rec0.itgroup)>
            <outIconsGroup guid=value.guid guid_picture=value.guid_picture name=value.name glob=glob />
          </if>
          <else>
            <outIconsGoods guid=value.guid guid_picture=value.guid_picture name=value.name artikul=value.artikul glob=glob  price=[value.price1, value.price2, value.price3]/>
          </else>
        </for>
    </if>
    <else-if(attrs && attrs.recs && attrs.recs.length == 0)>
        <!-- <ahtung descr = 'Просто НЕТ таких данных...'/> -->
        <ahtung descr = 'Загрузка данных...'/>
    </else-if>
    <else-if(attrs && attrs.ahtung_postgre !== "")>
        <ahtung descr = 'При получении данных произошла ошибка:<br/>' + attrs.ahtung_postgre/>
    </else-if>
    <else>
      <greetings name = 'Посетитель'/>
    </else>

</div>
<!-- ////////////////////////////////////////////////// -->



<macro|{descr}| name='ahtung'>
    <h1 class="display-3 text-center my-auto">
        ${descr}.
    </h1>
</macro>

<macro|{name}| name='greetings'>
  <h1 class="display-3 text-center my-auto">
      Здравствуйте ${name}. Ожидайте получения данных.<br/>Если их долго нет , то это возможно ошибка - зайдите позже или на станционарном компьютере.
  </h1>
</macro>

<!-- src = guid_picture.replace('https://newfurnitura.ru/upload', '/images'); -->
<!-- src = guid_picture.replace('https://newfurnitura.ru/upload', '/img/group'); -->
<macro|{guid, guid_picture, name, glob}| name='outIconsGroup'>
  <div class='d-flex flex-column p-0' style=''>
    <a href="/catalog/" + guid>
      <img
          key = guid
          src = guid_picture.replace('https://newfurnitura.ru/upload', glob.imgPath );
          class = 'mx-4 mt-5 mb-1 img-fluid'
          style = `border: 3px solid ${glob.colorBlueMF}; border-radius: 20px; height: ${whGroup}; width: ${whGroup};`/>
    </a>
    <p class='p-0 text-center text-break ml-4' style=`font-size: 3rem; width: ${whGroup};`>${name}</p>

  </div>
</macro>

<macro|{ guid, guid_picture, name, artikul, price, glob }| name='outIconsGoods'>

  <div class='col-12 row'>

    <img
        key = guid
        src = guid_picture.replace('https://newfurnitura.ru/upload', glob.imgPath );
        class = 'mx-4 mb-3 mt-5 img-fluid col-3'
        style = `border: 3px solid ${glob.colorBlueMF}; border-radius: 20px; height: ${whGood}; width: ${whGood};`/>

    <p  class='col-8 my-auto' style='font-size: 3rem;' >${name}<br/>арт: ${artikul}</p>

  </div>

  <div class='col-12 row'>
    <p  class='col-4 text-center' style='font-size: 3rem;' >розн. $!{glob.signRur}</p>
    <p  class='col-4 text-center' style='font-size: 3rem;' >мелк.опт $!{glob.signRur}</p>
    <p  class='col-4 text-center' style='font-size: 3rem;' >круп.опт $!{glob.signRur}</p>
  </div>
  <div class='col-12 row' style = `border-bottom: 3px solid ${glob.colorBlueMF};`>
    <p  class='col-4 display-4 text-right' >${ price[0] }</p>
    <p  class='col-4 display-4 text-right' >${ price[1] }</p>
    <p  class='col-4 display-4 text-right' >${ price[2] }</p>
  </div>

</macro>

<macro|{name, path}| name='headerName'>

  <div class='btn btn-outline-primary col-12 position-fixed d-flex justify-content-between align-items-center p-0' style='background-color: white; z-index: 1;'>

    <a href='/' class='' style='' >
       <img class='img-fluid' style=`height: ${glob.heightHeader};` src='/img/logoHeaderNum.png' alt="" />
    </a>

    <!-- <button class='p-2' style='font-size: 3rem;' onClick('openModal')>OK</button> -->

    <!-- <a href=`${path}` class='' >
       <h1 key='catalogHeader' class='display-3 pr-3' style='' nowrap><pre>   </pre><span>&#187</span></h1>
    </a> -->

  </div>

  <div  key='catalogHeader2' style=`height: 150px; }`/>
</macro>
